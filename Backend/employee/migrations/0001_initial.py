# Generated by Django 4.2.1 on 2023-06-02 20:26

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                ("age", models.PositiveIntegerField()),
                ("industry", models.CharField(max_length=255)),
                ("designation", models.CharField(max_length=255)),
                ("job_responsibilities", models.TextField()),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="VideoComments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("video_url", models.CharField(max_length=255, unique=True)),
                ("comments", models.TextField()),
            ],
            options={"db_table": "video_comments",},
        ),
        migrations.CreateModel(
            name="YoutubeVideosMeta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("search_term", models.CharField(max_length=255)),
                ("video_url", models.CharField(max_length=255)),
                ("video_title", models.CharField(max_length=255)),
                ("channel_name", models.CharField(max_length=255)),
                ("total_subscribers", models.CharField(max_length=25)),
                ("total_views", models.IntegerField()),
                ("total_likes", models.IntegerField()),
                ("total_dislikes", models.IntegerField()),
                ("total_comments", models.IntegerField()),
                ("video_desc", models.TextField()),
                ("total_times_User_added_to_favorites", models.IntegerField()),
                ("video_length", models.DurationField()),
                ("video_category", models.CharField(max_length=255)),
                ("video_tag", models.CharField(max_length=2000)),
                ("age_restrictions", models.CharField(max_length=15)),
                ("license", models.CharField(max_length=50)),
                ("captions_available", models.CharField(max_length=15)),
                (
                    "search_term_video_url",
                    models.CharField(max_length=255, unique=True),
                ),
            ],
            options={"db_table": "youtube_videos_meta",},
        ),
        migrations.CreateModel(
            name="YoutubeVIdeosMetaData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("search_term", models.CharField(max_length=255)),
                ("video_url", models.CharField(max_length=255)),
                ("video_title", models.CharField(max_length=255)),
                ("channel_name", models.CharField(max_length=255)),
                ("total_subscribers", models.CharField(max_length=25)),
                ("total_views", models.IntegerField()),
                ("total_likes", models.IntegerField()),
                ("total_dislikes", models.IntegerField()),
                ("total_comments", models.IntegerField()),
                ("video_desc", models.TextField()),
                ("total_times_User_added_to_favorites", models.IntegerField()),
                ("video_length", models.DurationField()),
                ("video_category", models.CharField(max_length=255)),
                ("video_tag", models.CharField(max_length=2000)),
                ("age_restrictions", models.CharField(max_length=15)),
                ("license", models.CharField(max_length=50)),
                ("captions_available", models.CharField(max_length=15)),
                (
                    "search_term_video_url",
                    models.CharField(max_length=255, unique=True),
                ),
                ("domain", models.CharField(max_length=255)),
                ("is_status", models.BooleanField(default=False)),
                ("is_flag", models.BooleanField(default=False)),
            ],
            options={"db_table": "youtube_videos_meta_data",},
        ),
    ]
